 *****     Strings ***
Strings are classes and arrays are objects the sequence of character  is called strings.
so strings are immutable, all the array object will be greater in heap memory but strings are created inside heap memory in strings pool. once a strings got created  it will created like permentally we cant modify it .

class Main {
    public static void main(String[] args) {
        String a="Hello";   ---|    print true
        String b="Hello";   ---|
        String a=new String("Hello");  ----|
	String b=new String("Hello");-----|  print false
        
        System.out.println(a==b);
    }
}
to put array length we have use array arr.length. and to get string length arr.length
str.length()  print number of character


convert the string into character array and then reverse it ?
The string become a immutable so we cant modify it so using char []arr we change it .
import java.util.*;
class Main {
    static void swap(char []arr,int i ,int j){
        char temp = arr[i];
        arr[i] = arr[j];
        arr[j] = temp;
        
    }
    static void reverse(char []arr){
        int  i=0;
        int  j=arr.length-1;
        while(i<j){
            swap(arr,i,j);
            i++;
            j--;
            
        }
        
        
    }
    public static void main(String[] args) {
      
       String str="Hello";
       char []arr=str.toCharArray(); 
        
        reverse(arr);
        System.out.println(Arrays.toString(arr));
    }
}

-length() - Returns the length of the string.
- charAt(int index) - Returns the character at the specified index.
- substring(int beginIndex, int endIndex) - Extracts a portion of the string.
- contains(CharSequence s) - Checks if the string contains the specified sequence.
- startsWith(String prefix) / endsWith(String suffix) - Checks if the string starts/ends with a given substring.
- toUpperCase() / toLowerCase() - Converts the string to uppercase or lowercase.
- trim() - Removes leading and trailing spaces.
- replace(String old, String new) - Replaces occurrences of a substring.
- split(String regex) - Splits the string into an array based on a regex.
- equals(String anotherString) / equalsIgnoreCase(String anotherString) - Compares two strings.



*************************
For an given array we have to print possible arrayit should be in a sequence but not continuous that called subset and in an array if we have n no of elements will get (2**n) subset 

Backtracking
in recursion we have only 2 possibility either if or else. 
Backtracking we have multiple possibility most of the problem whenever we reach base case we have to print all the base case element and remove last element every last recursive is called backtracking